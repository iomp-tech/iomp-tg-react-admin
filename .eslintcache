[{"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\index.js":"1","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\App.js":"2","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\authProvider.js":"3","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\myDataProvider.js":"4","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\page\\index.js":"5","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\index.js":"6","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\page\\Login.jsx":"7","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\All\\PreviewImage.jsx":"8","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Menu\\Menu.jsx":"9","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Timetable\\TimetableCreate.jsx":"10","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Timetable\\TimetableEdit.jsx":"11","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Timetable\\TimetableList.jsx":"12","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\style.js":"13","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Footer\\FooterList.jsx":"14","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Footer\\FooterCreate.jsx":"15","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Footer\\FooterEdit.jsx":"16","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Courses\\CoursesCreate.jsx":"17","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Courses\\CoursesList.jsx":"18","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Courses\\CoursesEdit.jsx":"19","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Header\\HeaderList.jsx":"20","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Header\\HeaderEdit.jsx":"21","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Header\\HeaderCreate.jsx":"22"},{"size":207,"mtime":1672137890390,"results":"23","hashOfConfig":"24"},{"size":1369,"mtime":1688550782741,"results":"25","hashOfConfig":"24"},{"size":2523,"mtime":1688373960267,"results":"26","hashOfConfig":"24"},{"size":2852,"mtime":1692577924365,"results":"27","hashOfConfig":"24"},{"size":53,"mtime":1672137890391,"results":"28","hashOfConfig":"24"},{"size":984,"mtime":1688550723643,"results":"29","hashOfConfig":"24"},{"size":2550,"mtime":1672137890391,"results":"30","hashOfConfig":"24"},{"size":358,"mtime":1689264838388,"results":"31","hashOfConfig":"24"},{"size":4559,"mtime":1688550755025,"results":"32","hashOfConfig":"24"},{"size":7912,"mtime":1690989398442,"results":"33","hashOfConfig":"24"},{"size":7903,"mtime":1690989404797,"results":"34","hashOfConfig":"24"},{"size":1099,"mtime":1688459184295,"results":"35","hashOfConfig":"24"},{"size":115,"mtime":1672137890392,"results":"36","hashOfConfig":"24"},{"size":719,"mtime":1688459669790,"results":"37","hashOfConfig":"24"},{"size":2025,"mtime":1689265444571,"results":"38","hashOfConfig":"24"},{"size":2177,"mtime":1689265441555,"results":"39","hashOfConfig":"24"},{"size":13616,"mtime":1692906642861,"results":"40","hashOfConfig":"24"},{"size":960,"mtime":1688459179220,"results":"41","hashOfConfig":"24"},{"size":13195,"mtime":1692906671781,"results":"42","hashOfConfig":"24"},{"size":799,"mtime":1688550698941,"results":"43","hashOfConfig":"24"},{"size":1914,"mtime":1688550666977,"results":"44","hashOfConfig":"24"},{"size":1776,"mtime":1688550795110,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1455v",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\index.js",[],["103","104"],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\App.js",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\authProvider.js",["105"],"import jwt_decode from 'jwt-decode';\r\n\r\nimport { servicesHost } from './myDataProvider';\r\n\r\nexport default {\r\n\tlogin: ({ email, password }) => {\r\n\t\tconst request = new Request(`${servicesHost}/login`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({ email, password }),\r\n\t\t\theaders: new Headers({ 'Content-Type': 'application/json' }),\r\n\t\t});\r\n\t\treturn fetch(request)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.status < 200 || response.status >= 300) {\r\n\t\t\t\t\tthrow new Error(response.statusText);\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(({ accessToken }) => {\r\n\t\t\t\tsessionStorage.setItem('token', accessToken);\r\n\t\t\t});\r\n\t},\r\n\tlogout: () => {\r\n\t\tsessionStorage.removeItem('token');\r\n\t\treturn Promise.resolve();\r\n\t},\r\n\tcheckError: error => {\r\n\t\t// if (error.status === 403) {\r\n\t\t// \tsessionStorage.removeItem('token');\r\n\t\t\t\r\n\t\t// \twindow.location.reload();\r\n\t\t// }\r\n\r\n\t\t//return Promise.resolve();\r\n\t\t// const token = sessionStorage.getItem('token');\r\n\r\n\t\t// const request = new Request('http://127.0.0.1:8000/api/refresh', {\r\n\t\t// \tmethod: 'GET',\r\n\t\t// \theaders: new Headers({ 'Authorization': `Bearer ${token}` }),\r\n\t\t// });\r\n\t\t// return fetch(request)\r\n\t\t// \t.then(response => {\r\n\t\t// \t\tif (response.status < 200 || response.status >= 300) {\r\n\t\t// \t\t\tthrow new Error(response.statusText);\r\n\t\t// \t\t}\r\n\t\t// \t\treturn response.json();\r\n\t\t// \t})\r\n\t\t// \t.then(({ token }) => {\r\n\t\t// \t\tsessionStorage.setItem('token', token);\r\n\r\n\t\t// \t\twindow.location.reload();\r\n\t\t// \t})\r\n\t\t// \t.catch(() => {\r\n\t\t// \t\t//sessionStorage.removeItem('token', token);\r\n\r\n\t\t// \t\t//window.location.reload();\r\n\t\t// \t});\r\n\t},\r\n\tcheckAuth: () => {\r\n\t\tconst token = sessionStorage.getItem('token');\r\n\r\n\t\tif (token) {\r\n\t\t\tconst { exp } = jwt_decode(token);\r\n\t\t\tif (exp > (new Date().getTime() / 1000) - 1440) {\r\n\t\t\t\treturn Promise.resolve();\r\n\t\t\t} else {\r\n\t\t\t\tconst request = new Request(`${servicesHost}/refresh`, {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\theaders: new Headers({ 'Authorization': `Bearer ${token}` }),\r\n\t\t\t\t});\r\n\t\t\t\tconst response = fetch(request)\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tif (response.status !== 200) {\r\n\t\t\t\t\t\t\tthrow new Error(response.statusText);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(({ token }) => {\r\n\t\t\t\t\t\tsessionStorage.setItem('token', token);\r\n\t\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Promise.reject();\r\n\t},\r\n\tgetPermissions: () => {\r\n\t\tconst role = sessionStorage.getItem('permissions');\r\n\t\treturn role ? Promise.resolve(role) : Promise.reject();\r\n\t}\r\n};","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\myDataProvider.js",["106","107"],"import { fetchUtils } from \"react-admin\";\r\nimport restServerProvider from 'ra-data-json-server';\r\n\r\nexport const servicesHost = 'https://apibot.iomp.ru:5000/api';\r\nexport const servicesHostImage = 'https://apibot.iomp.ru:5000';\r\n//http://127.0.0.1:8000/api\r\n// https://api.iomp.ru/public/api\r\n\r\nconst httpClient = (url, options = {}) => {\r\n\tif (!options.headers) {\r\n\t\toptions.headers = new Headers({ Accept: 'application/json' });\r\n\t}\r\n\tconst token = sessionStorage.getItem('token');\r\n\toptions.headers.set('Authorization', `Bearer ${token}`);\r\n\treturn fetchUtils.fetchJson(url, options);\r\n};\r\n\r\nconst dataProvider = restServerProvider(servicesHost, httpClient);\r\n\r\nconst myDataProfider = {\r\n\t...dataProvider,\r\n\tcreate: (resource, params) => {\r\n\t\tlet formData = new FormData();\r\n\r\n\t\tfor (let key in params.data) {\r\n\t\t\tif (key === \"image\" || key === \"imageDemo\") {\r\n\t\t\t\tformData.append(key, params.data[key].rawFile);\r\n\t\t\t} else if (key === \"images\") {\r\n\t\t\t\tparams.data[key].map((image, index) => {\r\n\t\t\t\t\tformData.append(`image-${index}`, image.rawFile);\r\n\t\t\t\t})\r\n\t\t\t} else if (key === \"programm\") {\r\n\t\t\t\tformData.append(`programm`, JSON.stringify(params.data[key]));\r\n\t\t\t} else {\r\n\t\t\t\tif (params.data[key] === null) {\r\n\t\t\t\t\tformData.append(key, \"\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tformData.append(key, params.data[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn httpClient(`${servicesHost}/${resource}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t}).then(({ json }) => {\r\n\t\t\tif (json.error) {\r\n\t\t\t\tsessionStorage.removeItem(\"token\");\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tdata: { ...params.data, id: json.id }\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n\tupdate: (resource, params) => {\r\n\t\tlet formData = new FormData();\r\n\r\n\t\tfor (let key in params.data) {\r\n\t\t\tif (key === \"image\" || key === \"imageDemo\") {\r\n\t\t\t\tif (params.data[key].rawFile) {\r\n\t\t\t\t\tformData.append(key, params.data[key].rawFile);\r\n\t\t\t\t}\r\n\t\t\t} else if (key === \"programm\") {\r\n\t\t\t\tformData.append(`programm`, JSON.stringify(params.data[key]));\r\n\t\t\t} else if (key === \"images\") {\r\n\t\t\t\tparams.data[key].map((image, index) => {\r\n\t\t\t\t\tif (image.rawFile) {\r\n\t\t\t\t\t\tformData.append(`image-${index}`, image.rawFile);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar rExp = new RegExp(servicesHostImage, \"g\");\r\n\r\n\t\t\t\t\t\tformData.append(`images`, image.replace(rExp, ''));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tif (params.data[key] === null) {\r\n\t\t\t\t\tformData.append(key, \"\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tformData.append(key, params.data[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tformData.append(\"_method\", \"PUT\");\r\n\r\n\t\treturn httpClient(`${servicesHost}/${resource}/${params.data.id}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t}).then(({ json }) => ({ data: { ...params.data, id: json.id } }));\r\n\t},\r\n\tgetOne: (resource, params) => {\r\n\t\treturn httpClient(`${servicesHost}/${resource}/${params.id}`).then(({ json }) => ({ data: json }));\r\n\t}\r\n};\r\n\r\nexport default myDataProfider;","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\page\\index.js",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\index.js",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\page\\Login.jsx",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\All\\PreviewImage.jsx",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Menu\\Menu.jsx",["108","109","110","111","112","113","114"],"import React, {Component, createElement} from \"react\";\r\nimport {Admin, Resource, Layout, MenuItemLink, getResources} from \"react-admin\";\r\nimport jsonServerProvider from \"ra-data-json-server\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Collapse,\r\n    ListItemText,\r\n    ListItemIcon,\r\n} from \"@material-ui/core\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nconst menuStyles = () => ({\r\n    nested: {\r\n        fontSize: \"18px\",\r\n    },\r\n});\r\n\r\nclass Menu extends Component {\r\n    menuList = [\r\n        {name: \"A\", label: \"Расписание\", icon: <MenuIcon />},\r\n        {name: \"B\", label: \"Курсы\", icon: <MenuIcon />},\r\n        {name: \"C\", label: \"Политика / Футер\", icon: <MenuIcon />},\r\n        {name: \"D\", label: \"Шапка\", icon: <MenuIcon />},\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {open: \"A\"};\r\n    }\r\n    render() {\r\n        const {resources, onMenuClick, logout} = this.props;\r\n        return (\r\n            <div>\r\n                <List component=\"nav\">\r\n                    {this.menuList.map((menu) => {\r\n                        return (\r\n                            <div key={menu.name}>\r\n                                <ListItem\r\n                                    button\r\n                                    onClick={() =>\r\n                                        this.setState((state) => ({\r\n                                            open: menu.name,\r\n                                        }))\r\n                                    }\r\n                                >\r\n                                    {menu.icon}\r\n                                    <ListItemText inset primary={menu.label} />\r\n                                </ListItem>\r\n                                <Collapse\r\n                                    in={this.state.open == menu.name}\r\n                                    timeout=\"auto\"\r\n                                    unmountOnExit\r\n                                >\r\n                                    <List component=\"div\" disablePadding>\r\n                                        {resources\r\n                                            .filter(\r\n                                                (x) =>\r\n                                                    x.options.menu == menu.name\r\n                                            )\r\n                                            .map((resource, i) => (\r\n                                                <MenuItemLink\r\n                                                    key={\"m\" + i}\r\n                                                    to={`/${resource.name}`}\r\n                                                    primaryText={\r\n                                                        resource.options\r\n                                                            .label ||\r\n                                                        resource.name\r\n                                                    }\r\n                                                    leftIcon={\r\n                                                        resource.icon\r\n                                                            ? createElement(\r\n                                                                  resource.icon\r\n                                                              )\r\n                                                            : undefined\r\n                                                    }\r\n                                                    onClick={onMenuClick}\r\n                                                    className={\r\n                                                        this.props.classes\r\n                                                            .nested\r\n                                                    }\r\n                                                />\r\n                                            ))}\r\n                                    </List>\r\n                                </Collapse>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nvar MenuWithStyles = withStyles(menuStyles)(Menu);\r\n\r\nconst MyMenu = withRouter(\r\n    connect((state) => ({\r\n        resources: getResources(state),\r\n    }))(MenuWithStyles)\r\n);\r\n\r\nconst MyLayout = (props) => <Layout {...props} menu={MyMenu} />;\r\n\r\nexport default MyLayout;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Timetable\\TimetableCreate.jsx",["115","116","117","118"],"import React from \"react\";\r\n\r\nimport myDataProfider from \"../.././myDataProvider\";\r\n\r\nimport {\r\n    Create,\r\n    SimpleForm,\r\n    FormDataConsumer,\r\n    TextInput,\r\n    SelectInput,\r\n    SelectArrayInput,\r\n    BooleanInput,\r\n    ImageInput,\r\n    ImageField,\r\n    required,\r\n} from \"react-admin\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nimport {DateTimeInput} from \"react-admin-date-inputs2\";\r\n\r\nimport {defaultStyle, arrayInputStyle} from \"../../style\";\r\n\r\nconst TimetableCreate = (props) => {\r\n    return (\r\n        <Create {...props} title=\"Новое расписание\">\r\n            <SimpleForm>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                    <FormDataConsumer>\r\n                        {({formData}) => (\r\n                            <>\r\n                                <BooleanInput\r\n                                    label=\"Скрыто\"\r\n                                    source=\"isHidden\"\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"idAwo\"\r\n                                    label=\"ID метки\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    type=\"number\"\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"category\"\r\n                                    label=\"Категория\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n                                <TextInput\r\n                                    source=\"title\"\r\n                                    label=\"Название\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <div style={defaultStyle}>\r\n                                    <RichTextInput\r\n                                        source=\"description\"\r\n                                        label=\"Описание\"\r\n                                        validate={[required()]}\r\n                                        multiline\r\n                                    />\r\n                                </div>\r\n\r\n                                <DateTimeInput\r\n                                    options={{\r\n                                        inputVariant: \"outlined\",\r\n                                        clearable: true,\r\n                                    }}\r\n                                    source=\"date\"\r\n                                    label=\"Дата и время проведения\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"btnText\"\r\n                                    label=\"Текст кнопки на главном экране\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    multiline\r\n                                />\r\n\r\n                                <BooleanInput\r\n                                    label=\"Авто\"\r\n                                    source=\"isAuto\"\r\n                                    style={defaultStyle}\r\n                                />\r\n                                {formData.isAuto && (\r\n                                    <TextInput\r\n                                        source=\"prolongationAutoDay\"\r\n                                        label=\"На сколько дней продлевается мероприятие\"\r\n                                        validate={[required()]}\r\n                                        style={defaultStyle}\r\n                                        type=\"number\"\r\n                                    />\r\n                                )}\r\n\r\n                                <TextInput\r\n                                    source=\"formTitle\"\r\n                                    label=\"Заголовок Формы\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <BooleanInput\r\n                                    label=\"Редирект после отправки формы\"\r\n                                    source=\"isRedirect\"\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                {formData.isRedirect ? (\r\n                                    <TextInput\r\n                                        source=\"redirectUrl\"\r\n                                        label=\"Url для редиректа\"\r\n                                        validate={[required()]}\r\n                                        style={defaultStyle}\r\n                                        multiline\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                        <h3 style={{fontFamily: \"sans-serif\"}}>\r\n                                            Страница Спасибо\r\n                                        </h3>\r\n\r\n                                        <TextInput\r\n                                            source=\"thankPageTitle\"\r\n                                            label=\"Заголовок\"\r\n                                            validate={[required()]}\r\n                                            style={defaultStyle}\r\n                                        />\r\n\r\n                                        <RichTextInput\r\n                                            source=\"thankPageDescription\"\r\n                                            label=\"Описание\"\r\n                                            validate={[required()]}\r\n                                            style={defaultStyle}\r\n                                            multiline\r\n                                        />\r\n                                    </>\r\n                                )}\r\n\r\n                                <TextInput\r\n                                    source=\"videoUrl\"\r\n                                    label=\"Ссылка на видео (если есть)\"\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <ImageInput\r\n                                    source=\"image\"\r\n                                    label=\"Изображение (максимальный размер 5МБ)\"\r\n                                    maxSize=\"5000000\"\r\n                                    accept=\"image/*\"\r\n                                    placeholder={<p>Перетащите файл сюда</p>}\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                >\r\n                                    <ImageField source=\"src\" />\r\n                                </ImageInput>\r\n                            </>\r\n                        )}\r\n                    </FormDataConsumer>\r\n                </MuiPickersUtilsProvider>\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n};\r\n\r\nexport default TimetableCreate;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Timetable\\TimetableEdit.jsx",["119","120","121","122"],"import React from \"react\";\r\n\r\nimport myDataProfider from \"../.././myDataProvider\";\r\n\r\nimport {\r\n    Edit,\r\n    SimpleForm,\r\n    FormDataConsumer,\r\n    TextInput,\r\n    SelectInput,\r\n    SelectArrayInput,\r\n    BooleanInput,\r\n    ImageInput,\r\n    ImageField,\r\n    required,\r\n} from \"react-admin\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nimport {DateTimeInput} from \"react-admin-date-inputs2\";\r\n\r\nimport {PreviewImage} from \".././\";\r\n\r\nimport {defaultStyle} from \"../../style\";\r\n\r\nconst TimetableEdit = (props) => {\r\n    return (\r\n        <Edit {...props}>\r\n            <SimpleForm redirect={false}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                    <FormDataConsumer>\r\n                        {({formData}) => (\r\n                            <>\r\n                                <BooleanInput\r\n                                    label=\"Скрыто\"\r\n                                    source=\"isHidden\"\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"idAwo\"\r\n                                    label=\"ID метки\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    type=\"number\"\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"category\"\r\n                                    label=\"Категория\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n                                <TextInput\r\n                                    source=\"title\"\r\n                                    label=\"Название\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <div style={defaultStyle}>\r\n                                    <RichTextInput\r\n                                        source=\"description\"\r\n                                        label=\"Описание\"\r\n                                        validate={[required()]}\r\n                                        multiline\r\n                                    />\r\n                                </div>\r\n\r\n                                <DateTimeInput\r\n                                    options={{\r\n                                        inputVariant: \"outlined\",\r\n                                        clearable: true,\r\n                                    }}\r\n                                    source=\"date\"\r\n                                    label=\"Дата и время проведения\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"btnText\"\r\n                                    label=\"Текст кнопки на главном экране\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    multiline\r\n                                />\r\n\r\n                                <BooleanInput\r\n                                    label=\"Авто\"\r\n                                    source=\"isAuto\"\r\n                                    style={defaultStyle}\r\n                                />\r\n                                {formData.isAuto && (\r\n                                    <TextInput\r\n                                        source=\"prolongationAutoDay\"\r\n                                        label=\"На сколько дней продлевается мероприятие\"\r\n                                        validate={[required()]}\r\n                                        style={defaultStyle}\r\n                                        type=\"number\"\r\n                                    />\r\n                                )}\r\n\r\n                                <TextInput\r\n                                    source=\"formTitle\"\r\n                                    label=\"Заголовок Формы\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <BooleanInput\r\n                                    label=\"Редирект после отправки формы\"\r\n                                    source=\"isRedirect\"\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                {formData.isRedirect ? (\r\n                                    <TextInput\r\n                                        source=\"redirectUrl\"\r\n                                        label=\"Url для редиректа\"\r\n                                        validate={[required()]}\r\n                                        style={defaultStyle}\r\n                                        multiline\r\n                                    />\r\n                                ) : (\r\n                                    <>\r\n                                        <h3 style={{fontFamily: \"sans-serif\"}}>\r\n                                            Страница Спасибо\r\n                                        </h3>\r\n\r\n                                        <TextInput\r\n                                            source=\"thankPageTitle\"\r\n                                            label=\"Заголовок\"\r\n                                            validate={[required()]}\r\n                                            style={defaultStyle}\r\n                                        />\r\n\r\n                                        <RichTextInput\r\n                                            source=\"thankPageDescription\"\r\n                                            label=\"Описание\"\r\n                                            validate={[required()]}\r\n                                            style={defaultStyle}\r\n                                            multiline\r\n                                        />\r\n                                    </>\r\n                                )}\r\n\r\n                                <TextInput\r\n                                    source=\"videoUrl\"\r\n                                    label=\"Ссылка на видео (если есть)\"\r\n                                    style={defaultStyle}\r\n                                />\r\n\r\n                                <ImageInput\r\n                                    source=\"image\"\r\n                                    label=\"Изображение (максимальный размер 5МБ)\"\r\n                                    maxSize=\"5000000\"\r\n                                    accept=\"image/*\"\r\n                                    placeholder={<p>Перетащите файл сюда</p>}\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                >\r\n                                    <PreviewImage source=\"src\" />\r\n                                </ImageInput>\r\n                            </>\r\n                        )}\r\n                    </FormDataConsumer>\r\n                </MuiPickersUtilsProvider>\r\n            </SimpleForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default TimetableEdit;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Timetable\\TimetableList.jsx",["123","124","125","126","127","128"],"import React from \"react\";\r\n\r\nimport {\r\n    List,\r\n    Datagrid,\r\n    ReferenceArrayField,\r\n    ReferenceManyField,\r\n    SingleFieldList,\r\n    TextField,\r\n    Filter,\r\n    UrlField,\r\n    ChipField,\r\n    ImageField,\r\n    BooleanField,\r\n    TextInput,\r\n    EditButton,\r\n} from \"react-admin\";\r\n\r\nconst TimetableFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Название\" source=\"title\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nconst TimetableList = (props) => {\r\n    return (\r\n        <List\r\n            {...props}\r\n            pagination={false}\r\n            title=\"Расписание\"\r\n            filters={<TimetableFilter />}\r\n        >\r\n            <Datagrid>\r\n                <EditButton />\r\n\r\n                <ImageField\r\n                    label=\"Изображение\"\r\n                    source=\"image\"\r\n                    src\r\n                    sortable={false}\r\n                />\r\n                <TextField label=\"Название\" source=\"title\" sortable={false} />\r\n            </Datagrid>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default TimetableList;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\style.js",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Footer\\FooterList.jsx",["129"],"import React from \"react\";\r\nimport {RichTextField} from \"admin-on-rest/lib/mui/field\";\r\n\r\nimport {List, Datagrid, TextField, ImageField, EditButton} from \"react-admin\";\r\n\r\nconst FooterList = (props) => {\r\n    return (\r\n        <List {...props} pagination={false} title=\"Политика\">\r\n            <Datagrid>\r\n                <EditButton />\r\n\r\n                <RichTextField label=\"Текст\" source=\"text\" sortable={false} />\r\n\r\n                <ImageField\r\n                    label=\"Изображение\"\r\n                    source=\"image\"\r\n                    src\r\n                    sortable={false}\r\n                />\r\n            </Datagrid>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default FooterList;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Footer\\FooterCreate.jsx",["130"],"import React from \"react\";\r\n\r\nimport {\r\n    Create,\r\n    SimpleForm,\r\n    FormDataConsumer,\r\n    ImageInput,\r\n    ImageField,\r\n    required,\r\n} from \"react-admin\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nimport {defaultStyle} from \"../../style\";\r\n\r\nconst FooterCreate = (props) => {\r\n    return (\r\n        <Create {...props} title=\"Новый блок\">\r\n            <SimpleForm>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                    <FormDataConsumer>\r\n                        {({formData}) => (\r\n                            <>\r\n                                <div style={defaultStyle}>\r\n                                    <RichTextInput\r\n                                        source=\"text\"\r\n                                        label=\"Описание\"\r\n                                        multiline\r\n                                    />\r\n                                </div>\r\n\r\n                                <ImageInput\r\n                                    source=\"images\"\r\n                                    label=\"Изображение (максимальный размер 5МБ)\"\r\n                                    maxSize=\"5000000\"\r\n                                    accept=\"image/*\"\r\n                                    placeholder={<p>Перетащите файл сюда</p>}\r\n                                    style={defaultStyle}\r\n                                    multiple={true}\r\n                                >\r\n                                    <ImageField source=\"src\" />\r\n                                </ImageInput>\r\n                            </>\r\n                        )}\r\n                    </FormDataConsumer>\r\n                </MuiPickersUtilsProvider>\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n};\r\n\r\nexport default FooterCreate;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Footer\\FooterEdit.jsx",["131","132","133","134","135","136","137"],"import React from \"react\";\r\n\r\nimport myDataProfider from \"../.././myDataProvider\";\r\n\r\nimport {\r\n    Edit,\r\n    SimpleForm,\r\n    FormDataConsumer,\r\n    TextInput,\r\n    SelectInput,\r\n    SelectArrayInput,\r\n    BooleanInput,\r\n    ImageInput,\r\n    ImageField,\r\n    required,\r\n} from \"react-admin\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nimport {PreviewImage} from \".././\";\r\n\r\nimport {defaultStyle} from \"../../style\";\r\n\r\nconst FooterEdit = (props) => {\r\n    return (\r\n        <Edit {...props}>\r\n            <SimpleForm redirect={false}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                    <FormDataConsumer>\r\n                        {({formData}) => (\r\n                            <>\r\n                                <div style={defaultStyle}>\r\n                                    <RichTextInput\r\n                                        source=\"text\"\r\n                                        label=\"Описание\"\r\n                                        multiline\r\n                                    />\r\n                                </div>\r\n\r\n                                <ImageInput\r\n                                    source=\"images\"\r\n                                    label=\"Изображение (максимальный размер 5МБ)\"\r\n                                    maxSize=\"5000000\"\r\n                                    accept=\"image/*\"\r\n                                    placeholder={<p>Перетащите файл сюда</p>}\r\n                                    style={defaultStyle}\r\n                                    multiple={true}\r\n                                >\r\n                                    <PreviewImage source=\"src\" />\r\n                                </ImageInput>\r\n                            </>\r\n                        )}\r\n                    </FormDataConsumer>\r\n                </MuiPickersUtilsProvider>\r\n            </SimpleForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default FooterEdit;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Courses\\CoursesCreate.jsx",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Courses\\CoursesList.jsx",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Courses\\CoursesEdit.jsx",[],"C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Header\\HeaderList.jsx",["138","139"],"import React from \"react\";\r\nimport {RichTextField} from \"admin-on-rest/lib/mui/field\";\r\n\r\nimport {List, Datagrid, TextField, ImageField, EditButton} from \"react-admin\";\r\n\r\nconst FooterList = (props) => {\r\n    return (\r\n        <List {...props} pagination={false} title=\"Политика\">\r\n            <Datagrid>\r\n                <EditButton />\r\n\r\n                <TextField\r\n                    label=\"Заголовок Мероприятий\"\r\n                    source=\"timetableTitle\"\r\n                    sortable={false}\r\n                />\r\n\r\n                <TextField\r\n                    label=\"courseTitle\"\r\n                    source=\"title\"\r\n                    sortable={false}\r\n                />\r\n            </Datagrid>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default FooterList;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Header\\HeaderEdit.jsx",["140","141","142","143","144","145","146","147"],"import React from \"react\";\r\n\r\nimport myDataProfider from \"../.././myDataProvider\";\r\n\r\nimport {\r\n    Edit,\r\n    SimpleForm,\r\n    FormDataConsumer,\r\n    TextInput,\r\n    SelectInput,\r\n    SelectArrayInput,\r\n    BooleanInput,\r\n    ImageInput,\r\n    ImageField,\r\n    required,\r\n} from \"react-admin\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nimport {PreviewImage} from \".././\";\r\n\r\nimport {defaultStyle} from \"../../style\";\r\n\r\nconst HeaderCreate = (props) => {\r\n    return (\r\n        <Edit {...props}>\r\n            <SimpleForm redirect={false}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                    <FormDataConsumer>\r\n                        {({formData}) => (\r\n                            <>\r\n                                <TextInput\r\n                                    source=\"timetableTitle\"\r\n                                    label=\"Заголовок Мероприятий\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    multiline\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"courseTitle\"\r\n                                    label=\"Заголовок Курсов\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    multiline\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </FormDataConsumer>\r\n                </MuiPickersUtilsProvider>\r\n            </SimpleForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default HeaderCreate;\r\n","C:\\Users\\user\\Desktop\\iomp-tg-react-admin\\src\\components\\Header\\HeaderCreate.jsx",["148","149","150"],"import React from \"react\";\r\n\r\nimport {\r\n    Create,\r\n    SimpleForm,\r\n    FormDataConsumer,\r\n    TextInput,\r\n    ImageInput,\r\n    ImageField,\r\n    required,\r\n} from \"react-admin\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport RichTextInput from \"ra-input-rich-text\";\r\n\r\nimport {defaultStyle} from \"../../style\";\r\n\r\nconst HeaderCreate = (props) => {\r\n    return (\r\n        <Create {...props} title=\"Новый блок\">\r\n            <SimpleForm>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n                    <FormDataConsumer>\r\n                        {({formData}) => (\r\n                            <>\r\n                                <TextInput\r\n                                    source=\"timetableTitle\"\r\n                                    label=\"Заголовок Мероприятий\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    multiline\r\n                                />\r\n\r\n                                <TextInput\r\n                                    source=\"courseTitle\"\r\n                                    label=\"Заголовок Курсов\"\r\n                                    validate={[required()]}\r\n                                    style={defaultStyle}\r\n                                    multiline\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </FormDataConsumer>\r\n                </MuiPickersUtilsProvider>\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n};\r\n\r\nexport default HeaderCreate;\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":5,"column":1,"nodeType":"157","endLine":92,"endColumn":3},{"ruleId":"158","severity":1,"message":"159","line":29,"column":41,"nodeType":"160","messageId":"161","endLine":29,"endColumn":43},{"ruleId":"158","severity":1,"message":"159","line":68,"column":41,"nodeType":"160","messageId":"161","endLine":68,"endColumn":43},{"ruleId":"162","severity":1,"message":"163","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"166","line":2,"column":16,"nodeType":"164","messageId":"165","endLine":2,"endColumn":24},{"ruleId":"162","severity":1,"message":"167","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":26},{"ruleId":"162","severity":1,"message":"168","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":17},{"ruleId":"162","severity":1,"message":"169","line":36,"column":40,"nodeType":"164","messageId":"165","endLine":36,"endColumn":46},{"ruleId":"170","severity":1,"message":"171","line":55,"column":57,"nodeType":"172","messageId":"173","endLine":55,"endColumn":59},{"ruleId":"170","severity":1,"message":"171","line":63,"column":68,"nodeType":"172","messageId":"173","endLine":63,"endColumn":70},{"ruleId":"162","severity":1,"message":"174","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"175","line":10,"column":5,"nodeType":"164","messageId":"165","endLine":10,"endColumn":16},{"ruleId":"162","severity":1,"message":"176","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":21},{"ruleId":"162","severity":1,"message":"177","line":25,"column":23,"nodeType":"164","messageId":"165","endLine":25,"endColumn":38},{"ruleId":"162","severity":1,"message":"174","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"175","line":10,"column":5,"nodeType":"164","messageId":"165","endLine":10,"endColumn":16},{"ruleId":"162","severity":1,"message":"176","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":21},{"ruleId":"162","severity":1,"message":"178","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":15},{"ruleId":"162","severity":1,"message":"179","line":6,"column":5,"nodeType":"164","messageId":"165","endLine":6,"endColumn":24},{"ruleId":"162","severity":1,"message":"180","line":7,"column":5,"nodeType":"164","messageId":"165","endLine":7,"endColumn":23},{"ruleId":"162","severity":1,"message":"181","line":8,"column":5,"nodeType":"164","messageId":"165","endLine":8,"endColumn":20},{"ruleId":"162","severity":1,"message":"182","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":13},{"ruleId":"162","severity":1,"message":"183","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":14},{"ruleId":"162","severity":1,"message":"184","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":17},{"ruleId":"162","severity":1,"message":"185","line":4,"column":25,"nodeType":"164","messageId":"165","endLine":4,"endColumn":34},{"ruleId":"162","severity":1,"message":"186","line":9,"column":5,"nodeType":"164","messageId":"165","endLine":9,"endColumn":13},{"ruleId":"162","severity":1,"message":"174","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"187","line":9,"column":5,"nodeType":"164","messageId":"165","endLine":9,"endColumn":14},{"ruleId":"162","severity":1,"message":"175","line":10,"column":5,"nodeType":"164","messageId":"165","endLine":10,"endColumn":16},{"ruleId":"162","severity":1,"message":"176","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":21},{"ruleId":"162","severity":1,"message":"188","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"178","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":15},{"ruleId":"162","severity":1,"message":"186","line":15,"column":5,"nodeType":"164","messageId":"165","endLine":15,"endColumn":13},{"ruleId":"162","severity":1,"message":"189","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":22},{"ruleId":"162","severity":1,"message":"178","line":4,"column":36,"nodeType":"164","messageId":"165","endLine":4,"endColumn":46},{"ruleId":"162","severity":1,"message":"174","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":22},{"ruleId":"162","severity":1,"message":"175","line":10,"column":5,"nodeType":"164","messageId":"165","endLine":10,"endColumn":16},{"ruleId":"162","severity":1,"message":"176","line":11,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":21},{"ruleId":"162","severity":1,"message":"188","line":12,"column":5,"nodeType":"164","messageId":"165","endLine":12,"endColumn":17},{"ruleId":"162","severity":1,"message":"190","line":13,"column":5,"nodeType":"164","messageId":"165","endLine":13,"endColumn":15},{"ruleId":"162","severity":1,"message":"178","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":14,"endColumn":15},{"ruleId":"162","severity":1,"message":"191","line":21,"column":8,"nodeType":"164","messageId":"165","endLine":21,"endColumn":21},{"ruleId":"162","severity":1,"message":"192","line":23,"column":9,"nodeType":"164","messageId":"165","endLine":23,"endColumn":21},{"ruleId":"162","severity":1,"message":"190","line":8,"column":5,"nodeType":"164","messageId":"165","endLine":8,"endColumn":15},{"ruleId":"162","severity":1,"message":"178","line":9,"column":5,"nodeType":"164","messageId":"165","endLine":9,"endColumn":15},{"ruleId":"162","severity":1,"message":"191","line":16,"column":8,"nodeType":"164","messageId":"165","endLine":16,"endColumn":21},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","'Resource' is defined but never used.","'jsonServerProvider' is defined but never used.","'ListItemIcon' is defined but never used.","'logout' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'myDataProfider' is defined but never used.","'SelectInput' is defined but never used.","'SelectArrayInput' is defined but never used.","'arrayInputStyle' is defined but never used.","'ImageField' is defined but never used.","'ReferenceArrayField' is defined but never used.","'ReferenceManyField' is defined but never used.","'SingleFieldList' is defined but never used.","'UrlField' is defined but never used.","'ChipField' is defined but never used.","'BooleanField' is defined but never used.","'TextField' is defined but never used.","'required' is defined but never used.","'TextInput' is defined but never used.","'BooleanInput' is defined but never used.","'RichTextField' is defined but never used.","'ImageInput' is defined but never used.","'RichTextInput' is defined but never used.","'PreviewImage' is defined but never used.","no-global-assign","no-unsafe-negation"]